Samsung Tire

Input:
5
3 100
75 45 80
30 55 95

2 100
65 90
20 30

5 150
35 105 100 45 75
115 75 55 35 105

7 150
70 95 15 65 85 75 55
105 80 10 90 115 110 45

8 200
35 30 50 80 70 15 10 40
70 20 20 85 65 40 25 50

Output:
15
-1
25
-1
45

Code:
#include <bits/stdc++.h>
using namespace std;

void solve()
{
   int n, k;
   cin >> n >> k;

   vector<pair<int, int>> a(n);
   for (int i = 0; i < n; i++)
      cin >> a[i].first;
   for (int i = 0; i < n; i++)
      cin >> a[i].second;

   vector<int> ind(n);

   auto get = [&]()
   {
      int cur = 0;
      int mx = 0, mn = 0;

      for (int i = 0; i < n; i++)
      {
         int j = ind[i];
         cur += a[j].first;
         mx = max(mx, cur);
         cur -= a[j].second;
         mn = min(mn, cur);
      }

      int ans = 1e9;

      if (abs(mn) + mx <= k)
      {
         ans = abs(mn);
      }

      return ans;
   };

   for (int i = 0; i < n; i++)
      ind[i] = i;
   int ans = 1e9;
   do
   {
      ans = min(ans, get());
   } while (next_permutation(ind.begin(), ind.end()));

   if (ans == 1e9)
      ans = -1;
   cout << ans << "\n";
}

int main()
{
   int t;
   cin >> t;
   while (t--)
   {
      solve();
   }
   return 0;
}
