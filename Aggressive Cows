https://www.geeksforgeeks.org/problems/aggressive-cows/0


You are given an array consisting of n integers which denote the position of a stall.
You are also given an integer k which denotes the number of aggressive cows.
You are given the task of assigning stalls to k cows such that the minimum distance between any two of them is the maximum possible.
The first line of input contains two space-separated integers n and k.
The second line contains n space-separated integers denoting the position of the stalls.

Input:
n=5 
k=3
stalls = [1 2 4 8 9]
Output:
3
Explanation:
The first cow can be placed at stalls[0], 
the second cow can be placed at stalls[2] and 
the third cow can be placed at stalls[3]. 
The minimum distance between cows, in this case, is 3, 
which also is the largest among all possible ways.

Code:

int solve(int n, int k, vector<int> &stalls)
{
   sort(stalls.begin(), stalls.end());

   auto check = [&](ll md)
   {
      ll last = stalls[0];
      ll cnt = 1;
      for (ll i = 1; i < n; i++)
      {
         if (stalls[i] - last >= md)
         {
            cnt++;
            last = stalls[i];
         }
      }

      return cnt >= k;
   };

   ll l = 0, r = stalls.back();
   ll ans = 0;
   while (l <= r)
   {

      ll md = (l + r) / 2;

      if (check(md))
      {
         ans = md;
         l = md + 1;
      }
      else
      {
         r = md - 1;
      }
   }

   return (int)ans;
}
